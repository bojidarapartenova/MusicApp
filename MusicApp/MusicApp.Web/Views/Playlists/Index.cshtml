@using MusicApp.Data.Models
@model IEnumerable<Playlist>

@{
    ViewData["Title"] = "Your Playlists";
}

<style>
    body{
        background-color: #111;
        color: #CCD0CF;
    }

    #btn-playlist{
        display: inline-block;
        padding: 5px 10px;
        background-color: #4A5C6A;
        color: #CCD0CF;
        text-decoration: none;
        border-radius: 0.375rem;
        transition: background-color 0.3s ease;
        border: none;
    }

    #btn-playlist:hover{
            background-color: #CCD0CF;
            color: #4A5C6A;
    }
</style>
<link href="~/css/songIndexStyle.css" rel="stylesheet" />
<h2>Your Playlists</h2>

<a asp-action="New" class="btn btn-primary mb-3" id="btn-playlist">New Playlist</a>

@if (!Model.Any())
{
    <p>You don't have any playlists yet.</p>
}
else
{
    <div class="song-container">
        @foreach (var song in Model)
        {
            <div class="song-card">
                <img src="@song.ImageUrl" alt="@song.Title" class="song-image" />
                <div class="song-title">@song.Title</div>

                <div class="buttons">
                    <button type="button" class="details-button"
                            data-bs-toggle="modal"
                            data-bs-target="#songDetailsModal"
                            data-id="@song.Id"
                            data-editurl="@Url.Action("Edit", "Song", new { id = song.Id })"
                            data-deleteurl="@Url.Action("Delete", "Song", new { id = song.Id })"
                            >
                        View
                    </button>
                </div>
            </div>
        }
    </div>
}
