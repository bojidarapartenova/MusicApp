    @using MusicApp.Web.ViewModels.Song
    @model IEnumerable<SongViewModel>
    @using System.Security.Claims

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link href="~/css/songIndexStyle.css" rel="stylesheet" />
    <link href="~/css/modalStyle.css" rel="stylesheet" />


    @{
        ViewData["Title"] = "Songs";
     }

    <h2 style="text-align: center;">All Songs</h2>

    @if (!Model.Any())
    {
        <p>No songs available.</p>
    }
    else
    {
        <div class="song-container">
            @foreach (var song in Model)
            {
                var isOwner = song.PublisherId == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

                <div class="song-card">
                    <img src="@song.ImageUrl" alt="@song.Title" class="song-image" />
                    <div class="song-title">@song.Title</div>

                    <div class="buttons">

                    @{
                        var returnUrl = Url.Action("Listen", "Song", new { id = song.Id });
                    }

                    @if (User.Identity!.IsAuthenticated)
                    {
                        <a class="listen-button" asp-controller="Song" asp-action="Listen" asp-route-id="@song.Id">Listen</a>
                    }
                    else
                    {
                        <a class="listen-button" href="~/Identity/Account/Login?returnUrl=@Uri.EscapeDataString(returnUrl!)">Login to Listen</a>
                    }


                        <button type="button" class="details-button"
                                data-bs-toggle="modal"
                                data-bs-target="#songDetailsModal"
                                data-id="@song.Id"
                                data-artist="@song.Artist"
                                data-publisher="@song.Publisher"
                                data-genre="@song.Genre"
                                data-date="@(song.ReleaseDate.ToString("yyyy-MM-dd") ?? "")"
                                data-editurl="@Url.Action("Edit", "Song", new { id = song.Id })"
                                data-deleteurl="@Url.Action("Delete", "Song", new { id = song.Id })"
                                data-isowner="@isOwner.ToString().ToLower()">
                            View Details
                        </button>
                    </div>
                </div>
            }
        </div>
    }

    <div class="modal fade" id="songDetailsModal" tabindex="-1" aria-labelledby="songDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content text-dark">
                <div class="modal-header">
                    <h5 class="modal-title" id="songDetailsModalLabel">Song Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Publisher:</strong> <span id="modalPublisher"></span></p>
                    <p><strong>Artist:</strong> <span id="modalArtist"></span></p>
                    <p><strong>Genre:</strong> <span id="modalGenre"></span></p>
                    <p><strong>Release Date:</strong> <span id="modalReleaseDate"></span></p>

                    <div id="modalButtons" class="mt-3 d-none">
                        <a id="editBtn" class="btn btn-primary" href="#">Edit</a>
                        <a id="deleteBtn" class="btn btn-danger" href="#">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        window.addEventListener('load', function () {
            var modal = document.getElementById('songDetailsModal');

            modal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;

                if (!button) return;

                document.getElementById('modalArtist').textContent = button.getAttribute('data-artist') || '';
                document.getElementById('modalPublisher').textContent = button.getAttribute('data-publisher') || '';
                document.getElementById('modalGenre').textContent = button.getAttribute('data-genre') || '';
                document.getElementById('modalReleaseDate').textContent = button.getAttribute('data-date') || '';

                var isOwner = button.getAttribute('data-isowner') === 'true';
                var modalButtons = document.getElementById('modalButtons');

                if (isOwner) {
                    modalButtons.classList.remove('d-none');
                    document.getElementById('editBtn').setAttribute('href', button.getAttribute('data-editurl'));
                   document.getElementById('deleteBtn').setAttribute('href', button.getAttribute('data-deleteurl'));

                } else {
                    modalButtons.classList.add('d-none');
                    document.getElementById('editBtn').removeAttribute('href');
                    document.getElementById('deleteBtn').onclick = null;
                }
            });
        });
    </script>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>


