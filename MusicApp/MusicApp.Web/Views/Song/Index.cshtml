@using MusicApp.Web.ViewModels.Song
@model IEnumerable<SongViewModel>

@{
    ViewData["Title"] = "Songs";
}

<style>
    body
    {
        background-color: #111;
        margin: 0;
        padding: 0;
        height: 100vh;
        color: #CCD0CF;
    }

    .song-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 60px;
        min-height: 80vh;
        padding: 40px 0;
    }

    .song-card {
        width: 300px;
        border: 1px solid #4A5C6A;
        border-radius: 10px;
        padding: 16px;
        text-align: center;
        box-shadow: 0 4px 8px 0 #4A5C6A;
        transition: transform 0.2s ease-in-out;
        background-color: #111;
    }

        .song-card:hover {
            transform: scale(1.03);
        }

    .song-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 12px;
    }

    .song-title {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .listen-button {
        display: inline-block;
        padding: 10px 20px;
        background-color: #4A5C6A;
        color: #CCD0CF;
        text-decoration: none;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

        .listen-button:hover {
            background-color: #CCD0CF;
            color:#4A5C6A;
        }
</style>

<h2 style="text-align: center;">All Songs</h2>

@if (!Model.Any())
{
    <p>No songs available.</p>
}
else
{
    <div class="song-container">
        @foreach(var song in Model)
        {
            <div class="song-card">
                <img src="@song.ImageUrl" alt="@song.Title" class="song-image"/>
                <div class="song-title">@song.Title</div>
                <a class="listen-button" asp-controller="Song" asp-action="Details" asp-route-id="@song.Id">Listen</a>
            </div>
        }

    </div>
}
