@using MusicApp.Web.ViewModels.Song
@model SongViewModel

@{
    ViewData["Title"] = "Now Playing";
    var durationInMinutes = $"{Model.Duration / 60:D2}:{Model.Duration % 60:D2}";
}

<link href="~/css/listenStyle.css" rel="stylesheet" />

<div style="display:flex; gap:2rem; max-width:1100px; margin:2rem auto; color:white; font-family:Arial, sans-serif; background-color:#1e1e1e; padding:1rem; border-radius:12px; box-shadow:0 0 10px rgba(0,0,0,0.4);">

    <div style="flex:1; ">
        <img src="@Model.ImageUrl" alt="Cover" style="width:100%; max-height:400px; object-fit:cover; border-radius:10px;" />

        <div class="song-info">
            <div style="display: flex; align-items: center; justify-content: space-between;">
                <h3 style="margin: 0;">@Model.Title</h3>
                <button id="likeButton"
                        data-song-id="@Model.Id"
                        class="like-heart @(Model.IsLiked ? "liked" : "")">
                    @(Model.IsLiked ? "♥️" : "🤍")
                </button>
            </div>
            <p style="color:gray; margin-top:0.2rem;">
                <strong>@Model.Artist</strong> • @Model.Publisher
            </p>
        </div>

        <audio id="audioPlayer" src="@Model.AudioUrl" preload="metadata" hidden></audio>
        <input type="range" id="progressBar" value="0" step="1" style="width:100%; appearance:none; height:5px; background:#444; border-radius:5px; outline:none;" />
        <div id="timeDisplay" style="font-size:0.85rem; color:#bbb;">0:00 / @durationInMinutes</div>
        <button onclick="togglePlay()" id="playBtn" class="btn btn-light w-100 mt-2">Pause</button>
    </div>

    <div style="flex:1;">
        <h4 style="margin-bottom:1rem;">Comments:</h4>

        <hr />

        <form asp-action="PostComment" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="SongId" value="@Model.Id" />
            <textarea name="Text" class="form-control mb-2" placeholder="Add a comment..." maxlength="150" required></textarea>
            <button type="submit" id="btn-post" class="btn btn-sm btn-success">Post</button>
        </form>

        <div class="scrollable-comments mt-3">
            @if (Model.Comments != null && Model.Comments.Any())
            {
                foreach (var comment in Model.Comments)
                {
                    <div style="padding:0.5rem; border-bottom:1px solid #333;">
                        <strong>@comment.Username</strong>
                        <small style="color:gray;"> - @comment.CreatedOn.ToShortTimeString() @comment.CreatedOn.ToShortDateString()</small>
                        <p style="margin:0.2rem 0;">@comment.Text</p>
                    </div>
                }
            }
            else
            {
                <p style="color:gray;">No comments yet. Be the first!</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const audio = document.getElementById("audioPlayer");
        const playBtn = document.getElementById("playBtn");
        const progressBar = document.getElementById("progressBar");
        const timeDisplay = document.getElementById("timeDisplay");

        audio.play();
        let isPlaying = true;

        function togglePlay() {
            if (audio.paused) {
                audio.play();
                playBtn.innerText = "Pause";
            } else {
                audio.pause();
                playBtn.innerText = "Play";
            }
        }

        audio.addEventListener("loadedmetadata", function () {
            progressBar.max = Math.floor(audio.duration);
        });

        audio.addEventListener("timeupdate", function () {
            progressBar.value = Math.floor(audio.currentTime);
            const current = formatTime(audio.currentTime);
            const total = formatTime(audio.duration);
            timeDisplay.innerText = `${current} / ${total}`;
        });

        progressBar.addEventListener("input", function () {
            audio.currentTime = progressBar.value;
        });

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }
    </script>

    <script>
        document.getElementById('likeButton').addEventListener('click', function () {
            const btn = this;
            const songId = btn.getAttribute('data-song-id');
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/Song/Like', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(songId)
            })
            .then(res => res.json())
            .then(data => {
                if (data.liked) {
                    btn.classList.add('liked');
                    btn.innerHTML = '♥️';
                } else {
                    btn.classList.remove('liked');
                    btn.innerHTML = '🤍';
                }
            });
        });
    </script>
}
