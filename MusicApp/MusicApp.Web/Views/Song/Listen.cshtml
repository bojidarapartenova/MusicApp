@using MusicApp.Web.ViewModels.Song
@model SongViewModel

@{
    ViewData["Title"] = "Now Playing";
    var durationInMinutes = $"{Model.Duration / 60:D2}:{Model.Duration % 60:D2}";
}

<style>
    body{
        background-color:#111;
    }
</style>

<div class="listen-container" style="
    max-width:400px;
    margin:2rem auto;
    padding:1rem;
    background-color:#1e1e1e;
    color:white;
    border-radius:12px;
    box-shadow: 0 0 20px rgba(0,0,0,0.4);
    font-family:Arial, sans-serif;
    text-align:center;
">
    <img src="@Model.ImageUrl" alt="Cover" style="
        width:100%;
        height:300px;
        object-fit:cover;
        border-radius:10px;
    " />

    <h3 style="margin-top:1rem;margin-bottom:0.5rem;">@Model.Title</h3>
    <p style="color:gray; font-size:0.9rem;">@Model.Artist • @Model.Publisher</p>

    <audio id="audioPlayer" src="@Model.AudioUrl" preload="metadata" hidden></audio>

    <input type="range" id="progressBar" value="0" step="1" style="
        width:100%;
        margin-top:1rem;
        appearance: none;
        height:5px;
        background: #444;
        border-radius:5px;
        outline: none;
    " />

    <div style="margin-top:0.25rem; font-size:0.85rem; color:#bbb;" id="timeDisplay">
        0:00 / @durationInMinutes
    </div>

    <div style="display:flex;justify-content:space-between;gap:0.5rem;margin-top:1rem;">
        <button onclick="togglePlay()" id="playBtn" class="btn btn-light w-100">Pause</button>

        @Html.AntiForgeryToken()

        <button id="likeButton"
                data-song-id="@Model.Id"
                class="btn w-100 @(Model.IsLiked ? "btn-danger" : "btn-outline-light")">
            @(Model.IsLiked ? "Liked" : "Like")
        </button>



        <button class="btn btn-outline-light w-100">Comment</button>
        <button class="btn btn-outline-light w-100">Add to Playlist</button>
    </div>

</div>

@section Scripts {
    <script>
        const audio = document.getElementById("audioPlayer");
        const playBtn = document.getElementById("playBtn");
        const progressBar = document.getElementById("progressBar");
        const timeDisplay = document.getElementById("timeDisplay");

        audio.play();
        let isPlaying = true;

        function togglePlay() {
            if (audio.paused) {
                audio.play();
                playBtn.innerText = "Pause";
            } else {
                audio.pause();
                playBtn.innerText = "Play";
            }
        }

        audio.addEventListener("loadedmetadata", function () {
            progressBar.max = Math.floor(audio.duration);
        });

        audio.addEventListener("timeupdate", function () {
            progressBar.value = Math.floor(audio.currentTime);
            const current = formatTime(audio.currentTime);
            const total = formatTime(audio.duration);
            timeDisplay.innerText = `${current} / ${total}`;
        });

        progressBar.addEventListener("input", function () {
            audio.currentTime = progressBar.value;
        });

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }
    </script>

    <script>
        document.getElementById('likeButton').addEventListener('click', function () {
            const btn = this;
            const songId = btn.getAttribute('data-song-id');
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/Song/Like', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(songId)
            })
            .then(res => res.json())
                    .then(data => {
            if (data.liked) {
                btn.classList.remove('btn-outline-light');
                btn.classList.add('btn-danger');
                btn.innerText = 'Liked';
            } else {
                btn.classList.remove('btn-danger');
                btn.classList.add('btn-outline-light');
                btn.innerText = 'Like';
            }
            });
        });
    </script>

}
